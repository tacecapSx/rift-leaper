<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bouncePlatform</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_platform</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bounceTimer = -1;

event_inherited();

isSolid = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Platform behavior

bounceTimer--;

if !obj_portal.swapping &amp;&amp; place_meeting(x-obj_player.hspeed,y-obj_player.vspeed,obj_player) {
    if obj_player.x &gt; bbox_right &amp;&amp; sign(obj_player._hspeed) == -1 {
        obj_player._hspeed = max(-obj_player._hspeed, 5 + _hspeed);
    }
    else if obj_player.x &lt; bbox_left &amp;&amp; sign(obj_player._hspeed) == 1 {
        obj_player._hspeed = min(-obj_player._hspeed, -5 + _hspeed);
    }
    else if y + image_yscale * 6 &gt; obj_player.y &amp;&amp; sign(obj_player._vspeed) == 1 {
        obj_player._vspeed = min(-obj_player._vspeed, -10 + _vspeed);
    }
    else {
        obj_player._vspeed = max(-obj_player._vspeed, 6 + _vspeed);
    }
    
    if !audio_is_playing(snd_bounce) play_sound(snd_bounce);
    
    obj_player.jumps = obj_player.maxJumps - 1;
    obj_player.canShoot = true;
    bounceTimer = 15;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var bt = clamp01(bounceTimer);

draw_tiled_platform(sprite_index, bounceTimer &gt; 0, x, y - bt * 6, image_xscale + bt, image_yscale + bt, 0, -1, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
